fn zonk() {
    ?fac := fn (n) {
        ?a := fn (x is Float) {
           self(1.0)
        },
        if n == 1 {
            1
        } else {
            n * self(n - 1)
        }
    },
    fac(2)
}


/*
fn zip() {
    ?b := fn (x) { x + 1 },
    b(42)
}
*/

/*
fn foo(f, g, x) {
    f(g(x)),
    foo(f, g, x + 1)
}

fn bar() {
    foo(fn (x) { x + 1 }, fn (x) { x + 2 }, 42)
}

fn snuva(x) {
    x + 1
}

fn zip() {
    ?b := fn (x) { x + 1 },
    3 := b(42),
    3 := snuva(42)
}

*/