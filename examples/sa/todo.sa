import Std.stdio : writeln
import Std.lists

record TodoItem {
    private description
    private completed

    this(description) {
        this(descriptor: descriptor, completed: false)
    }

    public fn toString() {
       if completed {
           "[x] "
       } else {
           "[ ] "
       }
    }
}

record TodoList {
    private items = [:]

    public fn addItem(tag, description) {
        ?item := TodoItem(description),
        this(items: [tag: item] ~ items)
    }

    public fn markItemCompleted(tag) {
        ?item := items[tag].setCompleted(true),
        this(items: item ~ items.delete(tag))
    }

    public fn displayItems() {
        lists.foreach(fn () { writeln(item.toString())}, items)
    }
}

export fn main() {
    ?loopUntilQuit := fn (todoList) {
        ?input := readInput(), // implemented elsewhere
        if input.command =String= "add" {
            (?todoList, ?a) := todoList.addItem(input.tag, input.description),
            loopUntilQuit(todoList)
        } elif input.command =String= "complete" {
            ?todoList := todoList.markItemCompleted(input.tag),
            loopUntilQuit(todoList)
        } elif input.command =String= "show" {
            todoList.displayItems(),
            loopUntilQuit(todoList)
        } elif input.command =String= "quit" {
            true
        } else {
          stdio.writeln("Unknown command: $input.command"),
          loopUntilQuit(todoList)
        }
    },
    ?todoList := TodoList(),
    loopUntilQuit(todoList)
}
