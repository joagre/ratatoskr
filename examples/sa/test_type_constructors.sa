import Std.types: Result
// type Result<$t1, $t2> = Ok<$t1> or Error<$t2>
import Std.io: writeln

fn foo<$t>(x is $t, baz is ($t -> Bool)) -> Result<$t, String> {
   if baz(x) {
       Ok<x>
       /*
       THINK ON THIS
       types:Result;Ok<x>
       */
   } else {
       Error<"Bad value">
   }
}

fn bar() {
    switch foo<Int>(42, fn (x) { x == 42 }) { // <Int> can be omitted
        case Ok<?value> =>
            writeln("%value")
        case Error<?reason> =>
            writeln("%reason")
    }
}
