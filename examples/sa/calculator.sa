// Note:
// -> is a cast (not used in the example below)
// <-> is a call

export fn main(_args) {
  // Calculate in same process
  ?calculator := new Calculator(),
  ?x := calculator.ackermann(3, 12),
  ?y := calculator.fac(4),

  // Calculate in a launched (not animated) record task
  ?calculator := launch Calculator(),
  x := calculator<->ackermann(3, 12),
  y := calculator<->fac(4)
}

record Calculator {
    public fn ackermann(m, n) {
        if m =Int= 0 {
            n + 1
        } elif n =Int= 0 && m >Int> 0 {
            ackermannFunction(m - 1, 1)
        } else {
            ackermannFunction(m - 1, ackermannFunction(m, n - 1))
        }
    }

    public fn fac(n) {
        if n =Int= 0 {
            1
        } else {
            n * fac(n -1)
        }
    }
}
