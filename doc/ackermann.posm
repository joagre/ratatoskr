; start() ->
;     ackermann(2, 2).
;
; ackermann(0, N) ->
;     N + 1;
; ackermann(M, 0) when M > 0 ->
;     ackermann(M - 1, 1);
; ackermann(M, N) when M > 0, N > 0 ->
;     ackermann(M - 1, ackermann(M, N - 1)).

;label 0          ; start/0
;  push -1        ; Bogus return address
;  push -1        ; Bogus fp
;  ; Call ackermann(3, 6)
;  push 3
;  push 6
;  call 1 2
;  ret

label 1          ; ackermann/2
  push 0
  load fp
  push 0
  neq
  cjump 2
  push -1
  load fp
  push 1
  add
  ret

label 2
  push -1
  load fp
  push 0
  neq
  cjump 3
  push 0
  load fp
  push 0
  gt
  not
  cjump 3
  ; Call ackermann(M - 1, 1)
  push 0
  load fp
  push 1
  sub
  push 0
  store fp
  push 1
  push -1
  store fp
  jump 1

label 3
  ; Call ackermann(M - 1, ackermann(M, N - 1))
  push 0
  load fp
  push 1
  sub
  ; Call ackermann(M, N - 1)
  push 0
  load fp
  push -1
  load fp
  push 1
  sub
  call 1 2
  push -1
  store fp
  push 0
  store fp
  jump 1
