LABEL 0          ; start/0
  ; Function prologue
  PUSHR FP       ; Saves previous FP
  PUSHR SP
  MOVER FP       ; Sets FP to SP
  PUSH 1         ; X = 1
  ALLOC "foo"    ; Y = "foo"
  PUSH -1
  LOADR FP
  PUSH 1
  ADD            ; Z = X + 1
  ; Call bar(Y, Z)
  PUSH -2
  LOADR FP       ; Pushes local variable Y
  PUSH -3
  LOAD FP        ; Pushes local variable Z
  PUSH 2         ; Pushes number of parameters
  CALL 1
  ; Remove local variables
  SWAP
  POP            ; Pop local variable Z
  SWAP
  FREE           ; Pop local variable Y and free memory
  SWAP
  POP            ; Pop local variable X
  ; Common function epilogue
  JUMP 1000

LABEL 1          ; bar/2
  ; Function prologue
  PUSHR FP       ; Saves previous FP
  PUSHR SP
  MOVER FP       ; Sets FP to SP
  ; Call SYS println
  PUSH 2
  LOADR FP       ; Pushes parameter Y
  SYS println
  POP            ; Pops return value from println
  PUSH 3
  LOADR FP
  ; Common function epilogue
  JUMP 1000

; Common function epilogue (same as example 1)
LABEL 1000
  SWAP
  MOVER FP       ; Restores FP to saved FP
  PUSHR SP
  PUSH 0
  EQ
  CJUMP 2000     ; If the stack is exhausted we are done!
  SWAP
  RET

LABEL 2000
  HALT
