import std.stdio
import std.lists

class TodoItem {
    private description
    private completed

    this(description) {
        this.description => description,
        completed => false
    }

    public fn markCompleted() {
        completed => true
    }

    public fn toString() {
       if completed {
           "[x] "
       } else {
           "[ ] "
       }
    }
}

class TodoList {
    private items = [:]

    public fn addItem(tag, description) {
        ?item = new TodoItem(tag, description),
        items => [tag : description] ~ items
    }

    public fn markItemCompleted(tag) {
        ?item = items[tag].markCompleted(),
        items => item ~ items.delete(tag)
    }

    public fn displayItems() {
        lists.foreach(fn () { stdio.writeln(item.toString())}, items)
    }
}

fn main() {
    fn loopUntilQuit(todoList) {
        ?input = stdio.readLine(stdio),
        if input.command == "add" {
            ?todoList = todoList.addItem(input.description),
            loopUntilQuit(todoList)
        } elif input.command == "complete" {
            ?todoList = todoList.markItemCompleted(input.index),
            loopUntilQuit(todoList)
        } elif input.command == "show" {
            todoList.displayItems(),
            loopUntilQuit(todoList)
        } elif input.command == "quit" {
            0
        } else {
          stdio.writeln("Unknown command: $input.command"),
          loopUntilQuit(todoList)
        }
    },
    ?todoList = new TodoList(),
    loopUntilQuit(todoList)
}
