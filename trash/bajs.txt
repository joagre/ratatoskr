0: loadri r1 #1
10: loadri r2 #1
20: rcall 32
25: pushr r0
27: sys 4
30: pop
31: rret
32: jmprnze r1 50
38: addrri r0 r2 #1
49: rret
50: jmprnze r2 96
56: jmpringt r1 #0 96
70: subrri r1 r1 #1
81: loadri r2 #1
91: jmp 32
96: pushr r1
98: subrri r2 r1 #1
109: rcall 32
114: subrsi r1 @2 #1
128: loadrr r2 r0
131: pop
132: jmp 32
0: r0 = 0, r1 = 0, r2 = 0
0: [-1, -1]
0:0: loadri r1 #1
0: r0 = 0, r1 = 1, r2 = 0
0: [-1, -1]
0:10: loadri r2 #1
0: r0 = 0, r1 = 1, r2 = 1
0: [-1, -1]
0:20: rcall 32
0: r0 = 0, r1 = 1, r2 = 1
0: [-1, -1, 25, 0]
0:32: jmprnze r1 50
0: r0 = 0, r1 = 1, r2 = 1
0: [-1, -1, 25, 0]
0:50: jmprnze r2 96
0: r0 = 0, r1 = 1, r2 = 1
0: [-1, -1, 25, 0]
0:96: pushr r1
0: r0 = 0, r1 = 1, r2 = 1
0: [-1, -1, 25, 0, 1]
0:98: subrri r2 r1 #1
0: r0 = 0, r1 = 1, r2 = 0
0: [-1, -1, 25, 0, 1]
0:109: rcall 32
0: r0 = 0, r1 = 1, r2 = 0
0: [-1, -1, 25, 0, 1, 114, 2]
0:32: jmprnze r1 50
0: r0 = 0, r1 = 1, r2 = 0
0: [-1, -1, 25, 0, 1, 114, 2]
0:50: jmprnze r2 96
0: r0 = 0, r1 = 1, r2 = 0
0: [-1, -1, 25, 0, 1, 114, 2]
0:56: jmpringt r1 #0 96
0: r0 = 0, r1 = 1, r2 = 0
0: [-1, -1, 25, 0, 1, 114, 2]
0:70: subrri r1 r1 #1
0: r0 = 0, r1 = 0, r2 = 0
0: [-1, -1, 25, 0, 1, 114, 2]
0:81: loadri r2 #1
0: r0 = 0, r1 = 0, r2 = 1
0: [-1, -1, 25, 0, 1, 114, 2]
0:91: jmp 32
0: r0 = 0, r1 = 0, r2 = 1
0: [-1, -1, 25, 0, 1, 114, 2]
0:32: jmprnze r1 50
0: r0 = 0, r1 = 0, r2 = 1
0: [-1, -1, 25, 0, 1, 114, 2]
0:38: addrri r0 r2 #1
0: r0 = 2, r1 = 0, r2 = 1
0: [-1, -1, 25, 0, 1, 114, 2]
0:49: rret
RET START
return address 114 in fp 5
0: r0 = 2, r1 = 0, r2 = 1
0: [-1, -1, 25, 0, 1]
0:114: subrsi r1 @2 #1
0: r0 = 2, r1 = 0, r2 = 1
0: [-1, -1, 25, 0, 1]
0:128: loadrr r2 r0
0: r0 = 2, r1 = 0, r2 = 2
0: [-1, -1, 25, 0, 1]
0:131: pop
0: r0 = 2, r1 = 0, r2 = 2
0: [-1, -1, 25, 0]
0:132: jmp 32
0: r0 = 2, r1 = 0, r2 = 2
0: [-1, -1, 25, 0]
0:32: jmprnze r1 50
0: r0 = 2, r1 = 0, r2 = 2
0: [-1, -1, 25, 0]
0:38: addrri r0 r2 #1
0: r0 = 3, r1 = 0, r2 = 2
0: [-1, -1, 25, 0]
0:49: rret
RET START
return address 25 in fp 2
0: r0 = 3, r1 = 0, r2 = 2
0: [-1, -1]
0:25: pushr r0
0: r0 = 3, r1 = 0, r2 = 2
0: [-1, -1, 3]
0:27: sys 4
3
0: r0 = 3, r1 = 0, r2 = 2
0: [-1, -1, 1]
0:30: pop
0: r0 = 3, r1 = 0, r2 = 2
0: [-1, -1]
0:31: rret
RET START
return address -1 in fp 0
Job 0 halted: []
